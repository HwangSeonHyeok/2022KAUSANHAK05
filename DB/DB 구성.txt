필요 테이블 : 식재료 / 레시피 / 태그 / 회원 / 냉장고 / 냉장고 속 물품들 / 평점

각 테이블 별 속성:
태그 : tag이름 / 식재료이름

레시피 : 레시피고유번호 / 레시피이름 / 요약 / 시간 / 난이도 / 인분 / 재료 / 조리과정 / 이미지 / 동영상 / 태그

식재료 : 레시피고유번호 / 식재료 번호 / 식재료이름 / 수량 / 단위 / tag이름

회원 : 회원고유번호 / 아이디 / 비밀번호 / 이메일주소

냉장고 : 냉장고고유번호 / 회원고유번호 / 냉장고이름 

냉장고 속 품목 : 품목고유번호 / 냉장고고유번호 / 품목이름 / 유통기한 / 수량 / 단위 / tag이름

장보기 : 장보기고유번호 / 장볼 품목 이름

평점 : 레시피고유번호 / 평점고유번호 / 레시피이름 / 아이디 / 평점


*** 여기서 냉장고 저장에는 품목 테이블을, 레시피 추천 시에는 식재료 테이블을 이용 (한 테이블에 너무 많은 속성을 넣는 건 문제가 될 수 있음 : 'DB 정규화' 검색)
     레시피 테이블도 나눌까 싶기도 하지만 어떻게 나눠야 할 지가 애매해서 일단 그대로 나둠
     식재료 / 레시피 테이블에는 크롤링 해둔 데이터들 저장해둠


실제 서비스 실행 시 쿼리
1. 회원가입 : 회원 테이블에 정보 저장

2. 냉장고 구분 : 한 회원이 복수의 냉장고 이용 가능하고 이를 냉장고고유번호로 구분, 냉장고 입장에서는 회원고유번호를 가지고 해당 회원의 냉장고임을 확인(냉장고 -> 회원)

3. 냉장고에 품목 추가 : 바코드든 직접 입력이든 품목명, 개수, 유통기한, tag 정보가 입력됨 -> 이를 품목 테이블에 저장, 냉장고 고유번호 가지고 어느 냉장고에 들어가는지 확인(품목 -> 냉장고)

4. 레시피 추천 시 식재료 확인 : 고유번호가 10인 레시피에 식재료 A,B,C 가 있다고 하면 A,B,C는 식재료 테이블에서 (해당레시피고유번호,해당 레시피에서 몇번 째 재료인지 나타내는 식재료 번호, 재료이름) 세 부분의 데이터가 각각

   (10,1,A), (10,2,B), (10,3,C) 순으로 저장되어 있음 -> 냉장고에 A,B,C 품목이 존재함 -> 수량을 확인하고 레시피 제작에 충분하다면 고유번호10 의 레시피를 추천하게 됨 (평점같은 요소는 제외)

5. 레시피 추천 시 애매한 식재료 : 공화춘 같이 이름만 가지고는 라면인지 애매한 품목 -> tag명 가지고 라면인지 확인하고 해당 태그에 매칭되는 식재료로서 사용(품목 -> 태그 -> 식재료)

6. 레시피 추천 시 카테고리 / 평점 : 사용자가 미리 만들고 싶은 카테고리를 선택하면 해당 카테고리의 레시피를 추천 + 각 레시피명에 매겨진 평점들의 평균을 가지고 추천한다?


애매한 부분
1. 품목 개수 : 품목 종류마다 개수가 아닌 박스, 리터 같은 다양한 방식으로 용량을 나눈다 -> 입력할 때 default 는 개수로 하고, tag 에 따라 그에 맞는 수량으로 바뀌는 식으로?
   ex) 사용자가 쌀을 품목으로 추가 -> tag 로 쌀을 선택한다 -> 수량 단위가 kg 으로 바뀜
        찾아보니 쌀을 세는 단위로 kg 외에도 말, 되 등이 있는데 현실적으로 이런 걸 다 따지는 건 불가능하지 않을까...... 가장 메이저한 단위 하나를 넣는 게 좋은 방법일 듯
2. 우선 필수적인 기능에 필요한 것 위주로 DB 테이블을 구성했는데, 추후 게시판 기능을 추가할 경우 아예 새로운 스키마 (DB 틀)을 만들어야 할 수도 있음
   일단은 필수 기능 구현에 문제 없는지부터 판단하고 생각하기로 함...



