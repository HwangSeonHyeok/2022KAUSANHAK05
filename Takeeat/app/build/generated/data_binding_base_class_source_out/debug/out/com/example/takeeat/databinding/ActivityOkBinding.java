// Generated by view binder compiler. Do not edit!
package com.example.takeeat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.takeeat.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOkBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button OkButton;

  @NonNull
  public final Button ReOkButton;

  @NonNull
  public final EditText codeName;

  @NonNull
  public final TextView codeNameText;

  @NonNull
  public final TextView okText;

  @NonNull
  public final TextView signUpUsername2;

  @NonNull
  public final TextView signUpUsername2Text;

  private ActivityOkBinding(@NonNull LinearLayout rootView, @NonNull Button OkButton,
      @NonNull Button ReOkButton, @NonNull EditText codeName, @NonNull TextView codeNameText,
      @NonNull TextView okText, @NonNull TextView signUpUsername2,
      @NonNull TextView signUpUsername2Text) {
    this.rootView = rootView;
    this.OkButton = OkButton;
    this.ReOkButton = ReOkButton;
    this.codeName = codeName;
    this.codeNameText = codeNameText;
    this.okText = okText;
    this.signUpUsername2 = signUpUsername2;
    this.signUpUsername2Text = signUpUsername2Text;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOkBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOkBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_ok, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Ok_button;
      Button OkButton = ViewBindings.findChildViewById(rootView, id);
      if (OkButton == null) {
        break missingId;
      }

      id = R.id.Re_Ok_button;
      Button ReOkButton = ViewBindings.findChildViewById(rootView, id);
      if (ReOkButton == null) {
        break missingId;
      }

      id = R.id.code_name;
      EditText codeName = ViewBindings.findChildViewById(rootView, id);
      if (codeName == null) {
        break missingId;
      }

      id = R.id.code_name_text;
      TextView codeNameText = ViewBindings.findChildViewById(rootView, id);
      if (codeNameText == null) {
        break missingId;
      }

      id = R.id.ok_text;
      TextView okText = ViewBindings.findChildViewById(rootView, id);
      if (okText == null) {
        break missingId;
      }

      id = R.id.signUpUsername2;
      TextView signUpUsername2 = ViewBindings.findChildViewById(rootView, id);
      if (signUpUsername2 == null) {
        break missingId;
      }

      id = R.id.signUpUsername2_text;
      TextView signUpUsername2Text = ViewBindings.findChildViewById(rootView, id);
      if (signUpUsername2Text == null) {
        break missingId;
      }

      return new ActivityOkBinding((LinearLayout) rootView, OkButton, ReOkButton, codeName,
          codeNameText, okText, signUpUsername2, signUpUsername2Text);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
