// Generated by view binder compiler. Do not edit!
package com.example.takeeat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.takeeat.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAuthBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button forgotPasswordButton;

  @NonNull
  public final EditText loginId;

  @NonNull
  public final TextView loginIdText;

  @NonNull
  public final EditText loginPaw;

  @NonNull
  public final TextView loginPawText;

  @NonNull
  public final Button signInButton;

  @NonNull
  public final Button signUpButton;

  private ActivityAuthBinding(@NonNull LinearLayout rootView, @NonNull Button forgotPasswordButton,
      @NonNull EditText loginId, @NonNull TextView loginIdText, @NonNull EditText loginPaw,
      @NonNull TextView loginPawText, @NonNull Button signInButton, @NonNull Button signUpButton) {
    this.rootView = rootView;
    this.forgotPasswordButton = forgotPasswordButton;
    this.loginId = loginId;
    this.loginIdText = loginIdText;
    this.loginPaw = loginPaw;
    this.loginPawText = loginPawText;
    this.signInButton = signInButton;
    this.signUpButton = signUpButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAuthBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAuthBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_auth, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAuthBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.forgot_Password_button;
      Button forgotPasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (forgotPasswordButton == null) {
        break missingId;
      }

      id = R.id.login_id;
      EditText loginId = ViewBindings.findChildViewById(rootView, id);
      if (loginId == null) {
        break missingId;
      }

      id = R.id.login_id_text;
      TextView loginIdText = ViewBindings.findChildViewById(rootView, id);
      if (loginIdText == null) {
        break missingId;
      }

      id = R.id.login_paw;
      EditText loginPaw = ViewBindings.findChildViewById(rootView, id);
      if (loginPaw == null) {
        break missingId;
      }

      id = R.id.login_paw_text;
      TextView loginPawText = ViewBindings.findChildViewById(rootView, id);
      if (loginPawText == null) {
        break missingId;
      }

      id = R.id.signIn_button;
      Button signInButton = ViewBindings.findChildViewById(rootView, id);
      if (signInButton == null) {
        break missingId;
      }

      id = R.id.signUp_button;
      Button signUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpButton == null) {
        break missingId;
      }

      return new ActivityAuthBinding((LinearLayout) rootView, forgotPasswordButton, loginId,
          loginIdText, loginPaw, loginPawText, signInButton, signUpButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
