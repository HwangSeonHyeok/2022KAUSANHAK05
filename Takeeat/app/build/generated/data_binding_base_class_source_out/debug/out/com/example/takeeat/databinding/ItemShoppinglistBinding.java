// Generated by view binder compiler. Do not edit!
package com.example.takeeat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.takeeat.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemShoppinglistBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView shoppinglistCount;

  @NonNull
  public final View shoppinglistDivider;

  @NonNull
  public final EditText shoppinglistEditItemName;

  @NonNull
  public final TextView shoppinglistItemName;

  @NonNull
  public final AppCompatButton shoppinglistMinusButton;

  @NonNull
  public final AppCompatButton shoppinglistPlusButton;

  private ItemShoppinglistBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView shoppinglistCount, @NonNull View shoppinglistDivider,
      @NonNull EditText shoppinglistEditItemName, @NonNull TextView shoppinglistItemName,
      @NonNull AppCompatButton shoppinglistMinusButton,
      @NonNull AppCompatButton shoppinglistPlusButton) {
    this.rootView = rootView;
    this.shoppinglistCount = shoppinglistCount;
    this.shoppinglistDivider = shoppinglistDivider;
    this.shoppinglistEditItemName = shoppinglistEditItemName;
    this.shoppinglistItemName = shoppinglistItemName;
    this.shoppinglistMinusButton = shoppinglistMinusButton;
    this.shoppinglistPlusButton = shoppinglistPlusButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemShoppinglistBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemShoppinglistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_shoppinglist, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemShoppinglistBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.shoppinglist_count;
      TextView shoppinglistCount = ViewBindings.findChildViewById(rootView, id);
      if (shoppinglistCount == null) {
        break missingId;
      }

      id = R.id.shoppinglist_Divider;
      View shoppinglistDivider = ViewBindings.findChildViewById(rootView, id);
      if (shoppinglistDivider == null) {
        break missingId;
      }

      id = R.id.shoppinglist_EditItemName;
      EditText shoppinglistEditItemName = ViewBindings.findChildViewById(rootView, id);
      if (shoppinglistEditItemName == null) {
        break missingId;
      }

      id = R.id.shoppinglist_ItemName;
      TextView shoppinglistItemName = ViewBindings.findChildViewById(rootView, id);
      if (shoppinglistItemName == null) {
        break missingId;
      }

      id = R.id.shoppinglist_MinusButton;
      AppCompatButton shoppinglistMinusButton = ViewBindings.findChildViewById(rootView, id);
      if (shoppinglistMinusButton == null) {
        break missingId;
      }

      id = R.id.shoppinglist_PlusButton;
      AppCompatButton shoppinglistPlusButton = ViewBindings.findChildViewById(rootView, id);
      if (shoppinglistPlusButton == null) {
        break missingId;
      }

      return new ItemShoppinglistBinding((ConstraintLayout) rootView, shoppinglistCount,
          shoppinglistDivider, shoppinglistEditItemName, shoppinglistItemName,
          shoppinglistMinusButton, shoppinglistPlusButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
